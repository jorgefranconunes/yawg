/**************************************************************************
 *
 * Copyright (c) 2017 Yawg project contributors.
 *
 **************************************************************************/

package com.varmateo.yawg.asciidoctor;

import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.util.List;

import org.asciidoctor.AttributesBuilder;
import org.asciidoctor.OptionsBuilder;
import org.asciidoctor.SafeMode;


/**
 * Utility functions simplifying Asciidoctor usafe.
 */
final class AdocUtils {


    /**
     * No instances of this class are to be created.
     */
    private AdocUtils() {
        // Nothing to do.
    }


    /**
     *
     */
    public static OptionsBuilder buildOptionsForBakeWithoutTemplate(
            final Path sourcePath,
            final Path targetDir,
            final Path targetPath) {

        File targetFile = targetPath.toFile();
        AttributesBuilder attributes =
                buildCommonAttributes(sourcePath, targetDir)
                .noFooter(false);
        OptionsBuilder options =
                buildCommonOptions(attributes)
                .toFile(targetFile);

        return options;
    }


    /**
     *
     */
    public static OptionsBuilder buildOptionsForBakeWithTemplate(
            final Path sourcePath,
            final Path targetDir) {

        AttributesBuilder attributes =
                buildCommonAttributes(sourcePath, targetDir);
        OptionsBuilder options =
                buildCommonOptions(attributes)
                .headerFooter(false);

        return options;
    }


    /**
     *
     */
    private static OptionsBuilder buildCommonOptions(
            final AttributesBuilder attributes) {

        OptionsBuilder options =
                OptionsBuilder.options()
                .attributes(attributes)
                .safe(SafeMode.UNSAFE);

        return options;
    }


    /**
     * Prepares a set of attributes that affect how Asciidoctor works.
     */
    private static AttributesBuilder buildCommonAttributes(
            final Path sourcePath,
            final Path targetDir) {

        String docDir = sourcePath.getParent().toString();
        AttributesBuilder attributes = AttributesBuilder.attributes();

        // Path of directory that contains the document. It is needed
        // for the PlantUML AsciidoctorJ extension to find its input
        // files relative to the AsciiDoc source document. At least in
        // version 1.3.1 of asciidoctorj-diagrams
        attributes.attribute("docdir", docDir);

        // Path of directory where image files generated by PlantUML
        // will be created.
        String imagesOutDir = targetDir.toAbsolutePath().normalize().toString();
        attributes.attribute("imagesoutdir", imagesOutDir);

        // Enable basic syntax highlithing by default.
        attributes.attribute("source-highlighter", "coderay");
        attributes.attribute("coderay-css", "style");

        // HACK - THIS MAKES THE AsciiDoc BAKER NOT THREAD SAFE.
        System.setProperty("plantuml.include.path", docDir);

        return attributes;
    }


}
