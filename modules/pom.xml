<?xml version="1.0" encoding="UTF-8"?>
<!--

Copyright (c) 2015-2017 Yawg project contributors.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>

  <groupId>com.varmateo.yawg</groupId>
  <artifactId>yawg-main</artifactId>
  <version>0.9.7-SNAPSHOT</version>





  <properties>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- By default unit tests are run. -->
    <skipTests>false</skipTests>

    <!-- Versions of dependencies and Maven plugins. -->
    <asciidoctorj.version>1.5.4</asciidoctorj.version>
    <asciidoctorj-diagram.version>1.3.1</asciidoctorj-diagram.version>
    <assertj-core.version>3.6.1</assertj-core.version>
    <commons-cli.version>1.2</commons-cli.version>
    <findbugs-maven-plugin.version>3.0.4</findbugs-maven-plugin.version>
    <jacoco-maven-plugin.version>0.7.7.201606060606</jacoco-maven-plugin.version>
    <freemaker.version>2.3.24-incubating</freemaker.version>
    <javaslang.version>2.0.5</javaslang.version>
    <jsoup.version>1.8.3</jsoup.version>
    <junit.version>4.11</junit.version>
    <maven-assembly-plugin.version>2.5.3</maven-assembly-plugin.version>
    <maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
    <maven-clean-plugin.version>2.6.1</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
    <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
    <maven-failsafe-plugin.version>2.19.1</maven-failsafe-plugin.version>
    <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
    <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
    <maven-jxr-plugin.version>2.5</maven-jxr-plugin.version>
    <maven-pmd-plugin.version>3.7</maven-pmd-plugin.version>
    <maven-project-info-reports-plugin.version>2.8</maven-project-info-reports-plugin.version>
    <maven-site-plugin.version>3.4</maven-site-plugin.version>
    <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
    <maven-surefire-report-plugin.version>2.18.1</maven-surefire-report-plugin.version>
    <mockito-core.version>2.2.27</mockito-core.version>
    <yamlbeans.version>1.09</yamlbeans.version>

  </properties>




  <!-- The project Maven modules. -->
  <modules>
    <module>acceptance</module>
    <module>api</module>
    <module>cli</module>
    <module>core</module>
    <module>release</module>
    <module>spi</module>
    <module>testutils</module>
  </modules>





  <!-- -->

  <build>

    <defaultGoal>package</defaultGoal>


    <!-- Plugins configuration that applies to all POMs inheriting
         from this one. -->
    <pluginManagement>

      <plugins>

        <!-- -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>


        <!-- Compiler configuration. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
            <showWarnings>true</showWarnings>
            <compilerArgs>
              <arg>-Xlint</arg>
              <arg>-Xlint:-serial</arg>
              <arg>-Xlint:-processing</arg>
            </compilerArgs>
          </configuration>
        </plugin>

          <!-- Javadoc copnfiguration. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven-javadoc-plugin.version}</version>
            <configuration>
              <author>true</author>
              <splitindex>true</splitindex>
              <version>true</version>
              <use>true</use>
              <quiet>true</quiet>
              <failOnError>true</failOnError>
        </configuration>
          </plugin>

      </plugins>

    </pluginManagement>


    <plugins>

      <!--
          This is here because we want to specify the exact CheckStyle
          version to be used. It will not work if we put this plugin
          inside <pluginManagement>. It will not work if we add the
          <dependencies> block inside <reporting>. And this, gentle
          fellow coder, is why Maven is going the way of the dodo...
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>7.1.2</version>
          </dependency>
        </dependencies>
      </plugin>


      <!-- Perform integration tests. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>

          <!-- Show exception stack traces of tests in stdout. -->
          <useFile>false</useFile>

          <skipTests>${skipTests}</skipTests>

          <failIfNoTests>false</failIfNoTests>

          <!-- Some tests expect config parameters in the form of Java
               system properties. -->
          <systemProperties>

            <!-- Required by com.varmateo.testutils.TestUtils -->
            <property>
              <name>TestUtils.inputTestFilesDir</name>
              <value>${basedir}/src/test/resources</value>
            </property>

            <!-- Required by com.varmateo.testutils.TestUtils -->
            <property>
              <name>TestUtils.tmpTestFilesDir</name>
              <value>${project.build.directory}/tmp</value>
            </property>

          </systemProperties>

        </configuration>
      </plugin>


      <!-- JUnit tests configuration -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>

          <!-- Show exception stack traces of tests in stdout. -->
          <useFile>false</useFile>

          <skipTests>${skipTests}</skipTests>

          <failIfNoTests>false</failIfNoTests>

          <!-- Some tests expect config parameters in the form of Java
               system properties. -->
          <systemProperties>

            <!-- Required by com.varmateo.testutils.TestUtils -->
            <property>
              <name>TestUtils.inputTestFilesDir</name>
              <value>${basedir}/src/test/resources</value>
            </property>

            <!-- Required by com.varmateo.testutils.TestUtils -->
            <property>
              <name>TestUtils.tmpTestFilesDir</name>
              <value>${project.build.directory}/tmp</value>
            </property>

          </systemProperties>

        </configuration>
      </plugin>


      <!-- Deploy to OSSRH. This goal is bound to the deploy lifecycle
           phase. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven-deploy-plugin.version}</version>
      </plugin>

    </plugins>


  </build>





  <!-- -->
  <profiles>


    <!--
        Used for creating the Maven site. The system property
        "yawg.mavensite" defines the path of the directory where the
        site files are created.
    -->
    <profile>
      <id>yawg-mavensite</id>

      <properties>
        <skipTests>false</skipTests>
      </properties>

      <build>
        <plugins>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <version>${maven-site-plugin.version}</version>
            <executions>
              <execution>
                <id>deploy-maven-site</id>
                <goals>
                  <goal>deploy</goal>
                </goals>
                <phase>site</phase>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>

    </profile>


    <profile>
      <id>yawg-jacoco</id>

      <build>
        <plugins>

          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>


    <profile>
      <id>yawg-maven-artifacts</id>
      <build>
        <plugins>
          <!-- Sign Maven artifacts -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>


  </profiles>





  <!-- -->
  <distributionManagement>

    <site>
      <id>yawg.mavensite</id>
      <name>Yawg Project Maven Reports</name>
      <url>file:///${yawg.mavensite}/</url>
    </site>

    <repository>
      <id>yawg.ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>

  </distributionManagement>





  <!--
      Report configuration. This refers to the reports that are
      included in the Maven generated site. The information on that
      site is only relevant to developers.
  -->
  <reporting>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}</version>
        <configuration>
          <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
        <reportSets>
          <reportSet>
            <id>top-project</id>
            <reports>
              <report>index</report>
              <report>project-team</report>
              <report>mailing-list</report>
              <report>scm</report>
              <report>issue-tracking</report>
              <report>cim</report>
              <report>dependencies</report>
              <report>summary</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration>
          <author>true</author>
          <splitindex>true</splitindex>
          <version>true</version>
          <use>true</use>
          <quiet>true</quiet>
          <failOnError>false</failOnError>
          <aggregate>false</aggregate>
        </configuration>
        <reportSets>
          <reportSet>
            <id>javadoc-default</id>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven-jxr-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven-surefire-report-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <!--
         See http://maven.apache.org/plugins/maven-checkstyle-plugin/
         for documentation.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <configuration>
          <configLocation>${yawg.projectRootDir}/src/main/config/checkstyle/checkstyle.xml</configLocation>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <!--
         See http://www.mojohaus.org/findbugs-maven-plugin/ for
         documentation.
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>${findbugs-maven-plugin.version}</version>
        <configuration>
          <effort>Max</effort>
          <xmlOutput>true</xmlOutput>
          <xmlOutputDirectory>target/site</xmlOutputDirectory>
        </configuration>
      </plugin>

      <!--
         See http://maven.apache.org/plugins/maven-pmd-plugin/ for
         documentation.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <configuration>
          <targetJdk>1.8</targetJdk>
          <verbose>true</verbose>
          <rulesets>
            <ruleset>${yawg.projectRootDir}/src/main/config/pmd/ruleset.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin>

    </plugins>

  </reporting>





  <!-- More project information. -->

  <name>Yawg Project</name>

  <description>Yawg is a static site generator.</description>

  <url>http://yawg.varmateo.com/</url>

  <inceptionYear>2015</inceptionYear>

  <licenses>
    <license>
      <name>GNU General Public License (GPL) version 3.0</name>
      <url>https://www.gnu.org/licenses/gpl-3.0.en.html</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>jorgefranconunes</id>
      <name>Jorge Nunes</name>
      <email>jorgefranconunes@gmail.com</email>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/jorgefranconunes/yawg.git</connection>
    <developerConnection>scm:git:ssh://github.com:jorgefranconunes/yawg.git</developerConnection>
    <url>http://github.com/jorgefranconunes/yawg/tree/master</url>
</scm>


</project>
