#!/bin/bash
###########################################################################
#
# Copyright (c) 2016-2019 Yawg project contributors.
#
#
# Launcher for the yawg CLI application.
#
###########################################################################

_scriptDir=$(dirname $0)
_scriptName=$(basename $0)
_yawgHome=$(cd $_scriptDir/..; pwd)

source ${_yawgHome}/lib/bash/yawg-utils.sh
source ${_yawgHome}/conf/yawg-defaults.conf


_yawgJre=


###
# The main program.
###
function main () {

    findJre

    local mainJarBasename=yawg-cli-${YAWG_VERSION}.jar
    local mainJar=$(yawgNormalizePath ${_yawgHome}/lib/jars/${mainJarBasename})

    exec "${_yawgJre}" \
         "-Dcom.varmateo.yawg.cli.Main.argv0=${_scriptName}" \
         -jar "${mainJar}" \
         "$@"
}


###
# Attempts to locate a JRE from YAWG_JAVA_HOME, JAVA_HOME, and "java".
###
function findJre () {

    local candidateJre=

    if [ -z "${candidateJre}" ] ; then
        if [ ! -z "${YAWG_JAVA_HOME}" ] ; then
            candidateJre=${YAWG_JAVA_HOME}/bin/java
            checkJre YAWG_JAVA_HOME ${candidateJre}
        fi
    fi

    if [ -z "${candidateJre}" ] ; then
        if [ ! -z "${JAVA_HOME}" ] ; then
            candidateJre=${JAVA_HOME}/bin/java
            checkJre JAVA_HOME ${candidateJre}
        fi
    fi

    if [ -z "${candidateJre}" ] ; then
        if type java > /dev/null 2>&1 ; then
            candidateJre="java"
            checkJre PATH ${candidateJre}
        fi
    fi

    if [ -z "${candidateJre}" ] ; then
        yawgError "Unable to find suitable JRE."
    fi

    _yawgJre=${candidateJre}
}


###
#
###
function checkJre () {

    local sourceDescription=$1
    local candidateJre=$2

    if type "${candidateJre}" > /dev/null 2>&1 ; then
        : # All is cool.
    else
        yawgError "JRE from ${sourceDescription} not found: ${candidateJre}"
    fi
}


###
# The main script.
###
main "$@"

